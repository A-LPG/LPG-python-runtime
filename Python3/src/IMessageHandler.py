"""
/**
 * Low-Level class to act as recipient for error messages generated by a
 * parser/compiler.
 */
"""
from abc import ABCMeta, abstractmethod
class IMessageHandler (metaclass=ABCMeta):
     """
     /**
     * The following constants can be used as indexes to dereference
     * values in the msgLocation and errorLocation arrays.
     *
     * Locations are constructed by the method getLocation in LexStream which
     * takes two arguments: a start and an end location and returns an array
     * of 6 integers.
     */
     """

     OFFSET_INDEX: int = 0
     LENGTH_INDEX: int = 1
     START_LINE_INDEX: int = 2
     START_COLUMN_INDEX: int = 3
     END_LINE_INDEX: int = 4
     END_COLUMN_INDEX: int = 5


     """/**
     *
     * When a location is None, the value of its offset is 0.
     *
     * @param errorCode
     * @param msgLocation
     * @param errorLocation
     * @param filename
     * @param errorInfo
     */
     """
     @abstractmethod 
     def handleMessage(errorCode: int, msgLocation: list, errorLocation: list, filename: str, errorInfo: list) -> None: 
         pass




